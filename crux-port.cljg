;; gorilla-repl.fileformat = 2

;; @@ [meta]
{}

;; @@

;; **
;;; # Pink Gorilla 
;;; 
;;; Shift + enter evaluates code. Hit CTRL+g twice in quick succession or click the menu icon (upper-right corner) for more commands.
;;; 
;;; It's a good habit to run each worksheet in its own namespace. We created a random namespace for you; you can keep using it.
;; **

;; @@ [clj]
; Automatically Download Dependencies (if they are not installed already) 
 (use '[pinkgorilla.helper])
 ;; (pinkgorilla.helper/add-dependencies '[org.pinkgorilla/gorilla-plot "0.8.8"])
(pinkgorilla.helper/add-dependencies
   '[[juxt/crux "19.06-1.1.0-alpha"]])
;; @@
;; =>
;;; ["^ ","~:type","list-like","~:open",["span",["^ ","~:class","clj-map"],"{"],"~:close",["span",["^ ","^2","clj-map"],"}"],"~:separator",["span",", "],"~:items",[["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","~:content",["span",["^ ","^2","clj-symbol"],"org.iq80.snappy/snappy"],"~:value","org.iq80.snappy/snappy"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.4\""],"^7","\"0.4\""]],"^7","[org.iq80.snappy/snappy \"0.4\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.iq80.snappy/snappy \"0.4\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.agrona/agrona"],"^7","org.agrona/agrona"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.0.0\""],"^7","\"1.0.0\""]],"^7","[org.agrona/agrona \"1.0.0\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.agrona/agrona \"1.0.0\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojure"],"^7","org.clojure/clojure"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.10.0\""],"^7","\"1.10.0\""]],"^7","[org.clojure/clojure \"1.10.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/core.specs.alpha"],"^7","org.clojure/core.specs.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.44\""],"^7","\"0.2.44\""]],"^7","[org.clojure/core.specs.alpha \"0.2.44\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/spec.alpha"],"^7","org.clojure/spec.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.176\""],"^7","\"0.2.176\""]],"^7","[org.clojure/spec.alpha \"0.2.176\"]"]],"^7","#{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}"]],"^7","[[org.clojure/clojure \"1.10.0\"] #{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.taoensso/nippy"],"^7","com.taoensso/nippy"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.14.0\""],"^7","\"2.14.0\""]],"^7","[com.taoensso/nippy \"2.14.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.iq80.snappy/snappy"],"^7","org.iq80.snappy/snappy"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.4\""],"^7","\"0.4\""]],"^7","[org.iq80.snappy/snappy \"0.4\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/tools.reader"],"^7","org.clojure/tools.reader"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.1.1\""],"^7","\"1.1.1\""]],"^7","[org.clojure/tools.reader \"1.1.1\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"net.jpountz.lz4/lz4"],"^7","net.jpountz.lz4/lz4"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.3\""],"^7","\"1.3\""]],"^7","[net.jpountz.lz4/lz4 \"1.3\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.tukaani/xz"],"^7","org.tukaani/xz"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.6\""],"^7","\"1.6\""]],"^7","[org.tukaani/xz \"1.6\"]"]],"^7","#{[org.iq80.snappy/snappy \"0.4\"] [org.clojure/tools.reader \"1.1.1\"] [net.jpountz.lz4/lz4 \"1.3\"] [org.tukaani/xz \"1.6\"]}"]],"^7","[[com.taoensso/nippy \"2.14.0\"] #{[org.iq80.snappy/snappy \"0.4\"] [org.clojure/tools.reader \"1.1.1\"] [net.jpountz.lz4/lz4 \"1.3\"] [org.tukaani/xz \"1.6\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.taoensso/truss"],"^7","com.taoensso/truss"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.5.0\""],"^7","\"1.5.0\""]],"^7","[com.taoensso/truss \"1.5.0\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.taoensso/truss \"1.5.0\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/tools.reader"],"^7","org.clojure/tools.reader"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.1.1\""],"^7","\"1.1.1\""]],"^7","[org.clojure/tools.reader \"1.1.1\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/tools.reader \"1.1.1\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"net.jpountz.lz4/lz4"],"^7","net.jpountz.lz4/lz4"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.3\""],"^7","\"1.3\""]],"^7","[net.jpountz.lz4/lz4 \"1.3\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[net.jpountz.lz4/lz4 \"1.3\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.tukaani/xz"],"^7","org.tukaani/xz"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.6\""],"^7","\"1.6\""]],"^7","[org.tukaani/xz \"1.6\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.tukaani/xz \"1.6\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"juxt/crux"],"^7","juxt/crux"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"19.06-1.1.0-alpha\""],"^7","\"19.06-1.1.0-alpha\""]],"^7","[juxt/crux \"19.06-1.1.0-alpha\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.agrona/agrona"],"^7","org.agrona/agrona"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.0.0\""],"^7","\"1.0.0\""]],"^7","[org.agrona/agrona \"1.0.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/clojure"],"^7","org.clojure/clojure"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.10.0\""],"^7","\"1.10.0\""]],"^7","[org.clojure/clojure \"1.10.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.taoensso/nippy"],"^7","com.taoensso/nippy"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.14.0\""],"^7","\"2.14.0\""]],"^7","[com.taoensso/nippy \"2.14.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.stuartsierra/dependency"],"^7","com.stuartsierra/dependency"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.0\""],"^7","\"0.2.0\""]],"^7","[com.stuartsierra/dependency \"0.2.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/tools.logging"],"^7","org.clojure/tools.logging"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.4.1\""],"^7","\"0.4.1\""]],"^7","[org.clojure/tools.logging \"0.4.1\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.taoensso/encore"],"^7","com.taoensso/encore"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.114.0\""],"^7","\"2.114.0\""]],"^7","[com.taoensso/encore \"2.114.0\"]"]],"^7","#{[org.agrona/agrona \"1.0.0\"] [org.clojure/clojure \"1.10.0\"] [com.taoensso/nippy \"2.14.0\"] [com.stuartsierra/dependency \"0.2.0\"] [org.clojure/tools.logging \"0.4.1\"] [com.taoensso/encore \"2.114.0\"]}"]],"^7","[[juxt/crux \"19.06-1.1.0-alpha\"] #{[org.agrona/agrona \"1.0.0\"] [org.clojure/clojure \"1.10.0\"] [com.taoensso/nippy \"2.14.0\"] [com.stuartsierra/dependency \"0.2.0\"] [org.clojure/tools.logging \"0.4.1\"] [com.taoensso/encore \"2.114.0\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.stuartsierra/dependency"],"^7","com.stuartsierra/dependency"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.0\""],"^7","\"0.2.0\""]],"^7","[com.stuartsierra/dependency \"0.2.0\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[com.stuartsierra/dependency \"0.2.0\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/tools.logging"],"^7","org.clojure/tools.logging"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.4.1\""],"^7","\"0.4.1\""]],"^7","[org.clojure/tools.logging \"0.4.1\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/tools.logging \"0.4.1\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/core.specs.alpha"],"^7","org.clojure/core.specs.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.44\""],"^7","\"0.2.44\""]],"^7","[org.clojure/core.specs.alpha \"0.2.44\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/core.specs.alpha \"0.2.44\"] nil]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.taoensso/encore"],"^7","com.taoensso/encore"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"2.114.0\""],"^7","\"2.114.0\""]],"^7","[com.taoensso/encore \"2.114.0\"]"],["^ ","^0","list-like","^1",["span",["^ ","^2","clj-set"],"#{"],"^3",["span",["^ ","^2","clj-set"],"}"],"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"com.taoensso/truss"],"^7","com.taoensso/truss"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"1.5.0\""],"^7","\"1.5.0\""]],"^7","[com.taoensso/truss \"1.5.0\"]"]],"^7","#{[com.taoensso/truss \"1.5.0\"]}"]],"^7","[[com.taoensso/encore \"2.114.0\"] #{[com.taoensso/truss \"1.5.0\"]}]"],["^ ","^0","list-like","^1",null,"^3",null,"^4",["span"," "],"^5",[["^ ","^0","list-like","^1",["span",["^ ","^2","clj-vector"],"["],"^3",["span",["^ ","^2","clj-vector"],"]"],"^4",["span"," "],"^5",[["^ ","^0","html","^6",["span",["^ ","^2","clj-symbol"],"org.clojure/spec.alpha"],"^7","org.clojure/spec.alpha"],["^ ","^0","html","^6",["span",["^ ","^2","clj-string"],"\"0.2.176\""],"^7","\"0.2.176\""]],"^7","[org.clojure/spec.alpha \"0.2.176\"]"],["^ ","^0","html","^6",["span",["^ ","^2","clj-nil"],"nil"],"^7","nil"]],"^7","[[org.clojure/spec.alpha \"0.2.176\"] nil]"]],"^7","{[org.iq80.snappy/snappy \"0.4\"] nil, [org.agrona/agrona \"1.0.0\"] nil, [org.clojure/clojure \"1.10.0\"] #{[org.clojure/core.specs.alpha \"0.2.44\"] [org.clojure/spec.alpha \"0.2.176\"]}, [com.taoensso/nippy \"2.14.0\"] #{[org.iq80.snappy/snappy \"0.4\"] [org.clojure/tools.reader \"1.1.1\"] [net.jpountz.lz4/lz4 \"1.3\"] [org.tukaani/xz \"1.6\"]}, [com.taoensso/truss \"1.5.0\"] nil, [org.clojure/tools.reader \"1.1.1\"] nil, [net.jpountz.lz4/lz4 \"1.3\"] nil, [org.tukaani/xz \"1.6\"] nil, [juxt/crux \"19.06-1.1.0-alpha\"] #{[org.agrona/agrona \"1.0.0\"] [org.clojure/clojure \"1.10.0\"] [com.taoensso/nippy \"2.14.0\"] [com.stuartsierra/dependency \"0.2.0\"] [org.clojure/tools.logging \"0.4.1\"] [com.taoensso/encore \"2.114.0\"]}, [com.stuartsierra/dependency \"0.2.0\"] nil, [org.clojure/tools.logging \"0.4.1\"] nil, [org.clojure/core.specs.alpha \"0.2.44\"] nil, [com.taoensso/encore \"2.114.0\"] #{[com.taoensso/truss \"1.5.0\"]}, [org.clojure/spec.alpha \"0.2.176\"] nil}"]
;; <=

;; @@ [clj]
; Define Namespace for your notebook and require namespaces 
(ns cruxy  
  (:require 
     [crux.api :as crux]
     [pinkgorilla.ui.hiccup :refer [html!]] 
     [pinkgorilla.ui.vega :refer [vega!]]))

;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(def ^crux.api.ICruxAPI system
  (crux/start-standalone-system {:kv-backend "crux.kv.memdb.MemKv"
                                 :db-dir "data/db-dir-1"
                                 :event-log-dir "data/eventlog-1"}))
;; @@
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-var"],"#'cruxy/system"],"~:value","#'cruxy/system"]
;; <=

;; @@ [clj]
;; portfolios on a series of valuation dates
(defn hld-hist
  []
  (dorun
   (for [asof  [#inst "2019-01-10"
                #inst "2019-01-15"
                #inst "2019-03-14"
                #inst "2019-03-15"]]
     (println asof (crux/q (crux/db system asof)
                           '[:find ?t ?q
                             :where
                             [?port :name "My Trading Portfolio"]
                             [?port :holdings ?hldg]
                             [?hldg :quantity ?q]
                             [?hldg :asset ?a]
                             [?a    :ticker ?t]])))))
(hld-hist)
;; @@
;; ->
;;; #inst "2019-01-10T00:00:00.000-00:00" #{}
;;; #inst "2019-01-15T00:00:00.000-00:00" #{}
;;; #inst "2019-03-14T00:00:00.000-00:00" #{}
;;; #inst "2019-03-15T00:00:00.000-00:00" #{}
;; <-
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(->> [;; add 3 companies
      [:crux.tx/put {:crux.db/id :company/t1, :name "IBM"}]
      [:crux.tx/put {:crux.db/id :company/t2, :name "JP Morgan"}]
      [:crux.tx/put {:crux.db/id :company/t3, :name "Ford"}]
      ;; add 3 assets based on those companies
      [:crux.tx/put {:crux.db/id :security/t1,
                     :issuer :company/t1 :ticker "IBM",
                     :type "Equity"}]
      [:crux.tx/put {:crux.db/id :security/t2, 
                     :issuer :company/t2 :ticker "JPM",
                     :type "Equity"}]
      [:crux.tx/put {:crux.db/id :security/t3,
                     :issuer :company/t3 :ticker "F",
                     :type "Equity"}]
      ;; add 2 positions (portfolio unspecified)
      [:crux.tx/put {:crux.db/id :pm/p1, :asset :security/t1, :quantity 100}]
      [:crux.tx/put {:crux.db/id :pm/p2, :asset :security/t2, :quantity 200}]
      ;; add portfolio (with those 2 positions)
      [:crux.tx/put {:crux.db/id :p/p1, 
                     :holdings [:pm/p1 :pm/p2],
                     :name "My Trading Portfolio"}]]
     ;; adding this asof date is optional
     (mapv #(conj %  #inst "2018-12-31"))
     ;; submit the transaction
     (crux/submit-tx  system)
     ;; get the tx time and wait before proceeding
     :crux.tx/tx-time
     ((fn wait [tx-time] (crux/sync system tx-time nil))))
(hld-hist)
;; @@
;; ->
;;; #inst "2019-01-10T00:00:00.000-00:00" #{[IBM 100] [JPM 200]}
;;; #inst "2019-01-15T00:00:00.000-00:00" #{[IBM 100] [JPM 200]}
;;; #inst "2019-03-14T00:00:00.000-00:00" #{[IBM 100] [JPM 200]}
;;; #inst "2019-03-15T00:00:00.000-00:00" #{[IBM 100] [JPM 200]}
;; <-
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(->> [[:crux.tx/put {:crux.db/id :pm/p1,
                     :asset :security/t1,
                     :quantity 350}
       #inst "2019-01-15"]]
     (crux/submit-tx system)
     :crux.tx/tx-time
     (#(crux/sync system % nil )))
(hld-hist)
            
;; @@
;; ->
;;; #inst "2019-01-10T00:00:00.000-00:00" #{[IBM 100] [JPM 200]}
;;; #inst "2019-01-15T00:00:00.000-00:00" #{[JPM 200] [IBM 350]}
;;; #inst "2019-03-14T00:00:00.000-00:00" #{[JPM 200] [IBM 350]}
;;; #inst "2019-03-15T00:00:00.000-00:00" #{[JPM 200] [IBM 350]}
;; <-
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(let [asof  #inst "2019-02-14"
      position (crux/entity (crux/db system asof) :pm/p1)]
  (crux/submit-tx system
   [[:crux.tx/put (update position :quantity + 1000) asof]]))
(hld-hist)


;; @@
;; ->
;;; #inst "2019-01-10T00:00:00.000-00:00" #{[IBM 100] [JPM 200]}
;;; #inst "2019-01-15T00:00:00.000-00:00" #{[JPM 200] [IBM 350]}
;;; #inst "2019-03-14T00:00:00.000-00:00" #{[JPM 200] [IBM 350]}
;;; #inst "2019-03-15T00:00:00.000-00:00" #{[JPM 200] [IBM 350]}
;; <-
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(let [asof #inst "2019-03-15"
      port (crux/entity (crux/db system asof) :p/p1)]
  (->> [[:crux.tx/put {:crux.db/id :pm/p3,
                       :asset :security/t3, 
                       :quantity 440}]
        [:crux.tx/put (update port :holdings conj :pm/p3)]]
       ;; add asof date to each entry
       (mapv #(conj % asof))
       ;; submit transaction
       (crux/submit-tx system)))
(hld-hist)
;; @@
;; ->
;;; #inst "2019-01-10T00:00:00.000-00:00" #{[IBM 100] [JPM 200]}
;;; #inst "2019-01-15T00:00:00.000-00:00" #{[JPM 200] [IBM 350]}
;;; #inst "2019-03-14T00:00:00.000-00:00" #{[JPM 200] [IBM 1350]}
;;; #inst "2019-03-15T00:00:00.000-00:00" #{[JPM 200] [IBM 1350]}
;; <-
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
(let [asof #inst "2019-03-15"
      port (crux/entity (crux/db system asof) :p/p1)]
  (->> [[:crux.tx/put {:crux.db/id :pm/p3,
                       :asset :security/t3, 
                       :quantity 440}]
        [:crux.tx/put (update port :holdings conj :pm/p3)]]
       ;; add asof date to each en try
       (mapv #(conj % asof))
       ;; submit transaction
       (crux/submit-tx system)))
(hld-hist)
;; @@
;; ->
;;; #inst "2019-01-10T00:00:00.000-00:00" #{[IBM 100] [JPM 200]}
;;; #inst "2019-01-15T00:00:00.000-00:00" #{[JPM 200] [IBM 350]}
;;; #inst "2019-03-14T00:00:00.000-00:00" #{[JPM 200] [IBM 1350]}
;;; #inst "2019-03-15T00:00:00.000-00:00" #{[JPM 200] [F 440] [IBM 1350]}
;; <-
;; =>
;;; ["^ ","~:type","html","~:content",["span",["^ ","~:class","clj-nil"],"nil"],"~:value","nil"]
;; <=

;; @@ [clj]
;(doc crux/tx-log)
(map  (comp keys first :crux.api/tx-ops) (crux/tx-log system (crux/new-tx-log-context system)  nil true))
;; @@

;; @@ [clj]

;; @@
